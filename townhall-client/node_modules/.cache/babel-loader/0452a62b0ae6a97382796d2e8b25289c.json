{"ast":null,"code":"import { SET_SHOUTS, LOADING_DATA, LIKE_SHOUT, UNLIKE_SHOUT, STOP_LOADING_UI, LOADING_UI, POST_SHOUT, SET_ERRORS, SUBMIT_COMMENT } from \"../types\";\nimport axios from \"axios\"; // Get all shouts\n\nexport const getShouts = () => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get(\"/shouts\").then(res => {\n    dispatch({\n      type: SET_SHOUTS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_SHOUTS,\n      payload: []\n    });\n  });\n}; // Get shout\n\nexport const getShout = shoutId => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.get(`/shout/${shoutId}`).then(res => {\n    dispatch({\n      type: SET_SHOUT,\n      payload: res.data\n    });\n    dispatch({\n      type: STOP_LOADING_UI\n    });\n  }).catch(err => console.log(err));\n}; // Post a shout\n\nexport const postShout = newShout => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post(\"/shout\", newShout).then(res => {\n    dispatch({\n      type: POST_SHOUT,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; // Like a shout\n\nexport const likeShout = () => dispatch => {\n  axios.get(`/shout/${shoutId}/like`).then(res => {\n    dispatch({\n      type: LIKE_SHOUT,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // Unlike a shout\n\nexport const unlikeShout = () => dispatch => {\n  axios.get(`/shout/${shoutId}/unlike`).then(res => {\n    dispatch({\n      type: UNLIKE_SHOUT,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // Submit a comment\n\nexport const submitComment = (shoutId, commentData) => dispatch => {\n  axios.post(`/shout/${shoutId}/comment`, commentData).then(res => {\n    dispatch({\n      type: SUBMIT_COMMENT,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; // Deletea","map":{"version":3,"sources":["/Users/kevinnguyen/Projects/TownHall/townhall-client/src/redux/actions/dataActions.js"],"names":["SET_SHOUTS","LOADING_DATA","LIKE_SHOUT","UNLIKE_SHOUT","STOP_LOADING_UI","LOADING_UI","POST_SHOUT","SET_ERRORS","SUBMIT_COMMENT","axios","getShouts","dispatch","type","get","then","res","payload","data","catch","err","getShout","shoutId","SET_SHOUT","console","log","postShout","newShout","post","clearErrors","response","likeShout","unlikeShout","submitComment","commentData"],"mappings":"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","sourcesContent":["import {\n  SET_SHOUTS,\n  LOADING_DATA,\n  LIKE_SHOUT,\n  UNLIKE_SHOUT,\n  STOP_LOADING_UI,\n  LOADING_UI,\n  POST_SHOUT,\n  SET_ERRORS,\n  SUBMIT_COMMENT,\n} from \"../types\";\nimport axios from \"axios\";\n\n// Get all shouts\nexport const getShouts = () => (dispatch) => {\n  dispatch({ type: LOADING_DATA });\n  axios\n    .get(\"/shouts\")\n    .then((res) => {\n      dispatch({\n        type: SET_SHOUTS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_SHOUTS,\n        payload: [],\n      });\n    });\n};\n\n// Get shout\nexport const getShout = (shoutId) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .get(`/shout/${shoutId}`)\n    .then((res) => {\n      dispatch({\n        type: SET_SHOUT,\n        payload: res.data,\n      });\n      dispatch({ type: STOP_LOADING_UI });\n    })\n    .catch((err) => console.log(err));\n};\n\n// Post a shout\nexport const postShout = (newShout) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/shout\", newShout)\n    .then((res) => {\n      dispatch({\n        type: POST_SHOUT,\n        payload: res.data,\n      });\n      dispatch(clearErrors());\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\n// Like a shout\nexport const likeShout = () => (dispatch) => {\n  axios\n    .get(`/shout/${shoutId}/like`)\n    .then((res) => {\n      dispatch({\n        type: LIKE_SHOUT,\n        payload: res.data,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n\n// Unlike a shout\nexport const unlikeShout = () => (dispatch) => {\n  axios\n    .get(`/shout/${shoutId}/unlike`)\n    .then((res) => {\n      dispatch({\n        type: UNLIKE_SHOUT,\n        payload: res.data,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n\n// Submit a comment\nexport const submitComment = (shoutId, commentData) => (dispatch) => {\n  axios\n    .post(`/shout/${shoutId}/comment`, commentData)\n    .then((res) => {\n      dispatch({\n        type: SUBMIT_COMMENT,\n        payload: res.data,\n      });\n      dispatch(clearErrors());\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\n// Deletea\n"]},"metadata":{},"sourceType":"module"}