{"ast":null,"code":"var _jsxFileName = \"/Users/kevinnguyen/Projects/TownHall/townhall-client/src/components/shout/PostShout.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../../util/MyButton\"; // Mui\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CloseIcon from \"@material-ui/icons/Close\"; // Redux\n\nimport { connect } from \"react-redux\";\nimport { postShout, clearErrors } from \"../../redux/actions/dataActions\";\n\nconst styles = theme => ({ ...theme.spreadThis,\n  submitButton: {\n    position: \"relative\",\n    float: \"right\",\n    marginTop: 10\n  },\n  progressSpinner: {\n    position: \"absolute\"\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"91%\",\n    top: \"6%\"\n  }\n});\n\nclass PostShout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      body: \"\",\n      errors: {}\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.props.clearErrors();\n      this.setState({\n        open: false,\n        errors: {}\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.postShout({\n        body: this.state.body\n      });\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  com(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    } // if (!nextProps.UI.errors && !nextProps.UI.loading) {\n    //   this.setState({ body: \"\", open: false, errors: {} });\n    // }\n\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    const {\n      classes,\n      UI: {\n        loading\n      }\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MyButton, {\n      onClick: this.handleOpen,\n      tip: \"Post a Shout!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MyButton, {\n      tip: \"Close\",\n      onClick: this.handleClose,\n      tipClassName: classes.closeButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(DialogTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"Post a new shout\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"body\",\n      type: \"text\",\n      label: \"SHOUT!!\",\n      multiline: true,\n      rows: \"3\",\n      placeholder: \"Shout at your fellow members\",\n      error: errors.body ? true : false,\n      helperText: errors.body,\n      className: classes.textField,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submitButton,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, \"Submit\", loading && /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 30,\n      className: classes.progressSpinner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\n\nPostShout.propTypes = {\n  postShout: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, {\n  postShout,\n  clearErrors\n})(withStyles(styles)(PostShout));","map":{"version":3,"sources":["/Users/kevinnguyen/Projects/TownHall/townhall-client/src/components/shout/PostShout.js"],"names":["React","Component","Fragment","PropTypes","withStyles","MyButton","Button","TextField","Dialog","DialogContent","DialogTitle","CircularProgress","AddIcon","CloseIcon","connect","postShout","clearErrors","styles","theme","spreadThis","submitButton","position","float","marginTop","progressSpinner","closeButton","left","top","PostShout","state","open","body","errors","handleOpen","setState","handleClose","props","handleChange","event","target","name","value","handleSubmit","preventDefault","com","nextProps","UI","render","classes","loading","textField","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../../util/MyButton\";\n// Mui\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n// Redux\nimport { connect } from \"react-redux\";\nimport { postShout, clearErrors } from \"../../redux/actions/dataActions\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  submitButton: {\n    position: \"relative\",\n    float: \"right\",\n    marginTop: 10,\n  },\n  progressSpinner: {\n    position: \"absolute\",\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"91%\",\n    top: \"6%\",\n  },\n});\n\nclass PostShout extends Component {\n  state = {\n    open: false,\n    body: \"\",\n    errors: {},\n  };\n  com(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors,\n      });\n    }\n    // if (!nextProps.UI.errors && !nextProps.UI.loading) {\n    //   this.setState({ body: \"\", open: false, errors: {} });\n    // }\n  }\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n  handleClose = () => {\n    this.props.clearErrors();\n    this.setState({ open: false, errors: {} });\n  };\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.postShout({ body: this.state.body });\n    this.setState({ open: false });\n  };\n  render() {\n    const { errors } = this.state;\n    const {\n      classes,\n      UI: { loading },\n    } = this.props;\n    return (\n      <Fragment>\n        <MyButton onClick={this.handleOpen} tip=\"Post a Shout!\">\n          <AddIcon />\n        </MyButton>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          fullWidth\n          maxWidth=\"sm\"\n        >\n          <MyButton\n            tip=\"Close\"\n            onClick={this.handleClose}\n            tipClassName={classes.closeButton}\n          >\n            <CloseIcon />\n          </MyButton>\n          <DialogTitle>Post a new shout</DialogTitle>\n          <DialogContent>\n            <form onSubmit={this.handleSubmit}>\n              <TextField\n                name=\"body\"\n                type=\"text\"\n                label=\"SHOUT!!\"\n                multiline\n                rows=\"3\"\n                placeholder=\"Shout at your fellow members\"\n                error={errors.body ? true : false}\n                helperText={errors.body}\n                className={classes.textField}\n                onChange={this.handleChange}\n                fullWidth\n              />\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submitButton}\n                disabled={loading}\n              >\n                Submit\n                {loading && (\n                  <CircularProgress\n                    size={30}\n                    className={classes.progressSpinner}\n                  />\n                )}\n              </Button>\n            </form>\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nPostShout.propTypes = {\n  postShout: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n});\n\nexport default connect(mapStateToProps, { postShout, clearErrors })(\n  withStyles(styles)(PostShout)\n);\n"]},"metadata":{},"sourceType":"module"}