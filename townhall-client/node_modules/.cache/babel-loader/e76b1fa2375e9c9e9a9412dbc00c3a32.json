{"ast":null,"code":"var _jsxFileName = \"/Users/kevinnguyen/Projects/TownHall/townhall-client/src/components/shout/CommentForm.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // Mui Stuff\n\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\"; // Redux Stuff\n\nimport { connect } from \"react-redux\";\nimport { submitComment } from \"../../redux/actions/dataActions\";\n\nconst style = theme => ({ ...theme.spreadThis\n});\n\nclass CommentForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      body: \"\",\n      errors: {}\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.submitComment(this.props.shoutId, {\n        body: this.state.body\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\n      this.setState({\n        body: \"\"\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      authenticated\n    } = this.props;\n    const errors = this.state.errors;\n    const commentFormMarkup = authenticated ? /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"body\",\n      type: \"text\",\n      label: \"Comment on Shout\",\n      error: errors.comment ? true : false,\n      helperText: errors.comment,\n      value: this.state.body,\n      onChange: this.handleChange,\n      fullWidth: true,\n      className: classes.textField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"Submit\"))) : null;\n    return commentFormMarkup;\n  }\n\n}\n\nCommentForm.propTypes = {\n  submitComment: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  shoutId: PropTypes.string.isRequired,\n  authenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  UI: state\n});\n\nexport default CommentForm;","map":{"version":3,"sources":["/Users/kevinnguyen/Projects/TownHall/townhall-client/src/components/shout/CommentForm.js"],"names":["React","Component","PropTypes","withStyles","Button","Grid","TextField","connect","submitComment","style","theme","spreadThis","CommentForm","state","body","errors","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","props","shoutId","componentWillReceiveProps","nextProps","UI","loading","render","classes","authenticated","commentFormMarkup","textAlign","comment","textField","button","propTypes","func","isRequired","object","string","bool","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// Mui Stuff\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n// Redux Stuff\nimport { connect } from \"react-redux\";\nimport { submitComment } from \"../../redux/actions/dataActions\";\n\nconst style = (theme) => ({\n  ...theme.spreadThis,\n});\n\nclass CommentForm extends Component {\n  state = {\n    body: \"\",\n    errors: {},\n  };\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({ errors: nextProps.UI.errors });\n    }\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\n      this.setState({ body: \"\" });\n    }\n  }\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.submitComment(this.props.shoutId, { body: this.state.body });\n  };\n  render() {\n    const { classes, authenticated } = this.props;\n    const errors = this.state.errors;\n    const commentFormMarkup = authenticated ? (\n      <Grid item sm={12} style={{ textAlign: \"center\" }}>\n        <form onSubmit={this.handleSubmit}>\n          <TextField\n            name=\"body\"\n            type=\"text\"\n            label=\"Comment on Shout\"\n            error={errors.comment ? true : false}\n            helperText={errors.comment}\n            value={this.state.body}\n            onChange={this.handleChange}\n            fullWidth\n            className={classes.textField}\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n          >\n            Submit\n          </Button>\n        </form>\n      </Grid>\n    ) : null;\n    return commentFormMarkup;\n  }\n}\n\nCommentForm.propTypes = {\n  submitComment: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  shoutId: PropTypes.string.isRequired,\n  authenticated: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    UI: state\n})\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}