{"ast":null,"code":"var _jsxFileName = \"/Users/kevinnguyen/Projects/TownHall/townhall-client/src/pages/signup.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppIcon from \"../images/icon.png\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\"; // Mui\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\"; // Redux\n\nimport { connect } from \"react-redux\";\nimport { signupUser, logoutUser } from \"../redux/actions/userActions\";\n\nconst styles = theme => ({ ...theme.spreadThis\n});\n\nclass signup extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const newUserData = {\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword,\n        handle: this.state.handle\n      };\n      this.props.logoutUser(newUserData, this.props.history);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      handle: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      UI: {}\n    } = this.props;\n    const {\n      errors,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: AppIcon,\n      alt: \"logo\",\n      className: classes.image,\n      width: \"200\",\n      height: \"200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      className: classes.pageTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"Signup\"), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      className: classes.textField,\n      helperText: errors.email,\n      error: errors.email ? true : false,\n      value: this.state.email,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      className: classes.textField,\n      helperText: errors.password,\n      error: errors.password ? true : false,\n      value: this.state.password,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"confirmPassword\",\n      name: \"confirmPassword\",\n      type: \"password\",\n      label: \"Confirm Password\",\n      className: classes.textField,\n      helperText: errors.confirmPassword,\n      error: errors.confirmPassword ? true : false,\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"handle\",\n      name: \"handle\",\n      type: \"text\",\n      label: \"Handle\",\n      className: classes.textField,\n      helperText: errors.handle,\n      error: errors.handle ? true : false,\n      value: this.state.handle,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }), errors.general && /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      className: classes.customError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, errors.general), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, \"Signup\", loading && /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 30,\n      className: classes.progress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, \"Already have an account ? Login \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 47\n      }\n    }, \"here\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nsignup.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  logoutUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser\n})(withStyles(styles)(signup));","map":{"version":3,"sources":["/Users/kevinnguyen/Projects/TownHall/townhall-client/src/pages/signup.js"],"names":["React","Component","PropTypes","AppIcon","axios","Link","withStyles","Grid","Typography","TextField","Button","CircularProgress","connect","signupUser","logoutUser","styles","theme","spreadThis","signup","constructor","handleSubmit","event","preventDefault","setState","loading","newUserData","email","state","password","confirmPassword","handle","props","history","handleChange","target","name","value","errors","componentWillReceiveProps","nextProps","UI","render","classes","form","image","pageTitle","textField","general","customError","button","progress","propTypes","object","isRequired","user","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppIcon from \"../images/icon.png\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\n// Mui\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport { signupUser, logoutUser } from \"../redux/actions/userActions\";\nconst styles = (theme) => ({ ...theme.spreadThis });\n\nclass signup extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      handle: \"\",\n      errors: {},\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors,\n      });\n    }\n  }\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({\n      loading: true,\n    });\n    const newUserData = {\n      email: this.state.email,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n      handle: this.state.handle,\n    };\n    this.props.logoutUser(newUserData, this.props.history);\n  };\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n  render() {\n    const { classes, UI: {} } = this.props;\n    const { errors, loading } = this.state;\n    return (\n      <Grid container className={classes.form}>\n        <Grid item sm />\n        <Grid item sm>\n          <img\n            src={AppIcon}\n            alt=\"logo\"\n            className={classes.image}\n            width=\"200\"\n            height=\"200\"\n          />\n          <Typography variant=\"h2\" className={classes.pageTitle}>\n            Signup\n          </Typography>\n          <form noValidate onSubmit={this.handleSubmit}>\n            <TextField\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              label=\"Email\"\n              className={classes.textField}\n              helperText={errors.email}\n              error={errors.email ? true : false}\n              value={this.state.email}\n              onChange={this.handleChange}\n              fullWidth\n            ></TextField>\n            <TextField\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              className={classes.textField}\n              helperText={errors.password}\n              error={errors.password ? true : false}\n              value={this.state.password}\n              onChange={this.handleChange}\n              fullWidth\n            ></TextField>\n            <TextField\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              type=\"password\"\n              label=\"Confirm Password\"\n              className={classes.textField}\n              helperText={errors.confirmPassword}\n              error={errors.confirmPassword ? true : false}\n              value={this.state.confirmPassword}\n              onChange={this.handleChange}\n              fullWidth\n            ></TextField>\n            <TextField\n              id=\"handle\"\n              name=\"handle\"\n              type=\"text\"\n              label=\"Handle\"\n              className={classes.textField}\n              helperText={errors.handle}\n              error={errors.handle ? true : false}\n              value={this.state.handle}\n              onChange={this.handleChange}\n              fullWidth\n            ></TextField>\n            {errors.general && (\n              <Typography variant=\"body2\" className={classes.customError}>\n                {errors.general}\n              </Typography>\n            )}\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              disabled={loading}\n            >\n              Signup\n              {loading && (\n                <CircularProgress size={30} className={classes.progress} />\n              )}\n            </Button>\n            <br />\n            <small>\n              Already have an account ? Login <Link to=\"/login\">here</Link>\n            </small>\n          </form>\n        </Grid>\n        <Grid item sm />\n      </Grid>\n    );\n  }\n}\n\nsignup.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  UI: state.UI,\n});\n\nexport default connect(mapStateToProps, { logoutUser })(\n  withStyles(styles)(signup)\n);\n"]},"metadata":{},"sourceType":"module"}