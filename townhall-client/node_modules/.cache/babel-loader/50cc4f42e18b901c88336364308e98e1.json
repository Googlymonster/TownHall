{"ast":null,"code":"import { SET_SHOUTS, LIKE_SHOUT, UNLIKE_SHOUT, LOADING_DATA, DELETE_SHOUT, POST_SHOUT, SET_SHOUT, SUBMIT_COMMENT } from \"../types\";\nconst initialState = {\n  shouts: [],\n  shout: {},\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_SHOUTS:\n      return { ...state,\n        shouts: action.payload,\n        loading: false\n      };\n\n    case SET_SHOUT:\n      return { ...state,\n        shout: action.payload\n      };\n\n    case LIKE_SHOUT:\n    case UNLIKE_SHOUT:\n      let index = state.shouts.findIndex(shout => shout.shoutId === action.payload.shoutId);\n      state.shouts[index] = action.payload;\n\n      if (state.shout.shoutId === action.payload.shoutId) {\n        state.shout = action.payload;\n      }\n\n      return { ...state\n      };\n\n    case DELETE_SHOUT:\n      index = state.shouts.findIndex(shout => shout.shoutId === action.payload);\n      state.shouts.splice(index, 1);\n      return { ...state\n      };\n\n    case POST_SHOUT:\n      return { ...state,\n        shouts: [action.payload, ...state.shouts]\n      };\n\n    case SUBMIT_COMMENT:\n      return { ...state,\n        shout: { ...state.shout,\n          comments: [action.payload, ...state.shout.comments]\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/kevinnguyen/Projects/TownHall/townhall-client/src/redux/reducers/dataReducer.js"],"names":["SET_SHOUTS","LIKE_SHOUT","UNLIKE_SHOUT","LOADING_DATA","DELETE_SHOUT","POST_SHOUT","SET_SHOUT","SUBMIT_COMMENT","initialState","shouts","shout","loading","state","action","type","payload","index","findIndex","shoutId","splice","comments"],"mappings":"AAAA,SACEA,UADF,EAEEC,UAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,YALF,EAMEC,UANF,EAOEC,SAPF,EAQEC,cARF,QASO,UATP;AAWA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,eAAe,UAAUC,KAAK,GAAGJ,YAAlB,EAAgCK,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,YAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKX,UAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELH,QAAAA,MAAM,EAAEI,MAAM,CAACE,OAFV;AAGLJ,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKL,SAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFT,OAAP;;AAIF,SAAKd,UAAL;AACA,SAAKC,YAAL;AACE,UAAIc,KAAK,GAAGJ,KAAK,CAACH,MAAN,CAAaQ,SAAb,CACTP,KAAD,IAAWA,KAAK,CAACQ,OAAN,KAAkBL,MAAM,CAACE,OAAP,CAAeG,OADlC,CAAZ;AAGAN,MAAAA,KAAK,CAACH,MAAN,CAAaO,KAAb,IAAsBH,MAAM,CAACE,OAA7B;;AACA,UAAIH,KAAK,CAACF,KAAN,CAAYQ,OAAZ,KAAwBL,MAAM,CAACE,OAAP,CAAeG,OAA3C,EAAoD;AAClDN,QAAAA,KAAK,CAACF,KAAN,GAAcG,MAAM,CAACE,OAArB;AACD;;AACD,aAAO,EACL,GAAGH;AADE,OAAP;;AAGF,SAAKR,YAAL;AACEY,MAAAA,KAAK,GAAGJ,KAAK,CAACH,MAAN,CAAaQ,SAAb,CACLP,KAAD,IAAWA,KAAK,CAACQ,OAAN,KAAkBL,MAAM,CAACE,OAD9B,CAAR;AAGAH,MAAAA,KAAK,CAACH,MAAN,CAAaU,MAAb,CAAoBH,KAApB,EAA2B,CAA3B;AACA,aAAO,EACL,GAAGJ;AADE,OAAP;;AAGF,SAAKP,UAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,MAAM,EAAE,CAACI,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACH,MAA1B;AAFH,OAAP;;AAIF,SAAKF,cAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,KAAK,EAAE,EACL,GAAGE,KAAK,CAACF,KADJ;AAELU,UAAAA,QAAQ,EAAE,CAACP,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACF,KAAN,CAAYU,QAAhC;AAFL;AAFF,OAAP;;AAOF;AACE,aAAOR,KAAP;AAnDJ;AAqDD","sourcesContent":["import {\n  SET_SHOUTS,\n  LIKE_SHOUT,\n  UNLIKE_SHOUT,\n  LOADING_DATA,\n  DELETE_SHOUT,\n  POST_SHOUT,\n  SET_SHOUT,\n  SUBMIT_COMMENT,\n} from \"../types\";\n\nconst initialState = {\n  shouts: [],\n  shout: {},\n  loading: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return {\n        ...state,\n        loading: true,\n      };\n    case SET_SHOUTS:\n      return {\n        ...state,\n        shouts: action.payload,\n        loading: false,\n      };\n    case SET_SHOUT:\n      return {\n        ...state,\n        shout: action.payload,\n      };\n    case LIKE_SHOUT:\n    case UNLIKE_SHOUT:\n      let index = state.shouts.findIndex(\n        (shout) => shout.shoutId === action.payload.shoutId\n      );\n      state.shouts[index] = action.payload;\n      if (state.shout.shoutId === action.payload.shoutId) {\n        state.shout = action.payload;\n      }\n      return {\n        ...state,\n      };\n    case DELETE_SHOUT:\n      index = state.shouts.findIndex(\n        (shout) => shout.shoutId === action.payload\n      );\n      state.shouts.splice(index, 1);\n      return {\n        ...state,\n      };\n    case POST_SHOUT:\n      return {\n        ...state,\n        shouts: [action.payload, ...state.shouts],\n      };\n    case SUBMIT_COMMENT:\n      return {\n        ...state,\n        shout: {\n          ...state.shout,\n          comments: [action.payload, ...state.shout.comments],\n        },\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}