{"ast":null,"code":"import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED, LOADING_USER, MARK_NOTIFICATIONS_READ } from \"../types\";\nimport axios from \"axios\";\nexport const loginUser = (userData, history) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post(\"/login\", userData).then(res => {\n    setAuthorizationHeader(res.data.token);\n    dispatch(getUserData());\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    history.push(\"/\");\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const signupUser = (newUserData, history) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post(\"/signup\", newUserData).then(res => {\n    setAuthorizationHeader(res.data.token);\n    dispatch(getUserData());\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    history.push(\"/\");\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem('FBIdToken');\n  delete axios.defaults.headers.common['A'];\n};\nexport const getUserData = () => dispatch => {\n  dispatch({\n    type: LOADING_USER\n  });\n  axios.get(\"/user\").then(res => {\n    dispatch({\n      type: SET_USER,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n};\n\nconst setAuthorizationHeader = token => {\n  const FBIdToken = `Bearer ${token}`;\n  localStorage.setItem(\"FBIdToken\", FBIdToken);\n  axios.defaults.headers.common[\"Authorization\"] = FBIdToken;\n};","map":{"version":3,"sources":["/Users/kevinnguyen/Projects/TownHall/townhall-client/src/redux/actions/userActions.js"],"names":["SET_USER","SET_ERRORS","CLEAR_ERRORS","LOADING_UI","SET_UNAUTHENTICATED","LOADING_USER","MARK_NOTIFICATIONS_READ","axios","loginUser","userData","history","dispatch","type","post","then","res","setAuthorizationHeader","data","token","getUserData","push","catch","err","payload","response","signupUser","newUserData","logoutUser","localStorage","removeItem","defaults","headers","common","get","console","log","FBIdToken","setItem"],"mappings":"AAAA,SACEA,QADF,EAEEC,UAFF,EAGEC,YAHF,EAIEC,UAJF,EAKEC,mBALF,EAMEC,YANF,EAOEC,uBAPF,QAQO,UARP;AASA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAwBC,QAAD,IAAc;AAC5DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAET;AAAR,GAAD,CAAR;AACAI,EAAAA,KAAK,CACFM,IADH,CACQ,QADR,EACkBJ,QADlB,EAEGK,IAFH,CAESC,GAAD,IAAS;AACbC,IAAAA,sBAAsB,CAACD,GAAG,CAACE,IAAJ,CAASC,KAAV,CAAtB;AACAP,IAAAA,QAAQ,CAACQ,WAAW,EAAZ,CAAR;AACAR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV;AAAR,KAAD,CAAR;AACAQ,IAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACD,GAPH,EAQGC,KARH,CAQUC,GAAD,IAAS;AACdX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX,UADC;AAEPsB,MAAAA,OAAO,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAFf,KAAD,CAAR;AAID,GAbH;AAcD,CAhBM;AAkBP,OAAO,MAAMQ,UAAU,GAAG,CAACC,WAAD,EAAchB,OAAd,KAA2BC,QAAD,IAAc;AAChEA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAET;AAAR,GAAD,CAAR;AACAI,EAAAA,KAAK,CACFM,IADH,CACQ,SADR,EACmBa,WADnB,EAEGZ,IAFH,CAESC,GAAD,IAAS;AACbC,IAAAA,sBAAsB,CAACD,GAAG,CAACE,IAAJ,CAASC,KAAV,CAAtB;AACAP,IAAAA,QAAQ,CAACQ,WAAW,EAAZ,CAAR;AACAR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV;AAAR,KAAD,CAAR;AACAQ,IAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACD,GAPH,EAQGC,KARH,CAQUC,GAAD,IAAS;AACdX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX,UADC;AAEPsB,MAAAA,OAAO,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAFf,KAAD,CAAR;AAID,GAbH;AAcD,CAhBM;AAkBP,OAAO,MAAMU,UAAU,GAAE,MAAOhB,QAAD,IAAc;AAC3CiB,EAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACA,SAAOtB,KAAK,CAACuB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,GAA9B,CAAP;AACD,CAHM;AAKP,OAAO,MAAMb,WAAW,GAAG,MAAOR,QAAD,IAAc;AAC7CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AACAE,EAAAA,KAAK,CACF0B,GADH,CACO,OADP,EAEGnB,IAFH,CAESC,GAAD,IAAS;AACbJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEZ,QADC;AAEPuB,MAAAA,OAAO,EAAER,GAAG,CAACE;AAFN,KAAD,CAAR;AAID,GAPH,EAQGI,KARH,CAQUC,GAAD,IAASY,OAAO,CAACC,GAAR,CAAYb,GAAZ,CARlB;AASD,CAXM;;AAaP,MAAMN,sBAAsB,GAAIE,KAAD,IAAW;AACxC,QAAMkB,SAAS,GAAI,UAASlB,KAAM,EAAlC;AACAU,EAAAA,YAAY,CAACS,OAAb,CAAqB,WAArB,EAAkCD,SAAlC;AACA7B,EAAAA,KAAK,CAACuB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDI,SAAjD;AACD,CAJD","sourcesContent":["import {\n  SET_USER,\n  SET_ERRORS,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  SET_UNAUTHENTICATED,\n  LOADING_USER,\n  MARK_NOTIFICATIONS_READ,\n} from \"../types\";\nimport axios from \"axios\";\n\nexport const loginUser = (userData, history) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/login\", userData)\n    .then((res) => {\n      setAuthorizationHeader(res.data.token);\n      dispatch(getUserData());\n      dispatch({ type: CLEAR_ERRORS });\n      history.push(\"/\");\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\nexport const signupUser = (newUserData, history) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/signup\", newUserData)\n    .then((res) => {\n      setAuthorizationHeader(res.data.token);\n      dispatch(getUserData());\n      dispatch({ type: CLEAR_ERRORS });\n      history.push(\"/\");\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\nexport const logoutUser= () => (dispatch) => {\n  localStorage.removeItem('FBIdToken');\n  delete axios.defaults.headers.common['A']\n}\n\nexport const getUserData = () => (dispatch) => {\n  dispatch({ type: LOADING_USER });\n  axios\n    .get(\"/user\")\n    .then((res) => {\n      dispatch({\n        type: SET_USER,\n        payload: res.data,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n\nconst setAuthorizationHeader = (token) => {\n  const FBIdToken = `Bearer ${token}`;\n  localStorage.setItem(\"FBIdToken\", FBIdToken);\n  axios.defaults.headers.common[\"Authorization\"] = FBIdToken;\n};\n"]},"metadata":{},"sourceType":"module"}